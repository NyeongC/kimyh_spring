- 프로젝트 생성
디펜던시 : Spring Web, Thymeleaf
build.gradle 자바 11, spring 2.5.6으로 변경 후 코끼리

initializr 에서 aop는 어디?


프로젝트명Application 으로 구동 확인.

http://localhost:8080/

- 의존성 추가
build.gradle 에 오른쪽 마우스 + 제너레이트

- View 환경 설정

스프링 부트가 제공하는 Welcome Page 기능
resources/static/index.html <- 웰컴 페이지

컨트롤러에서 리턴 값으로 문자를 반환하면 뷰 리졸버( viewResolver )가 화면을 찾아서 처리한다.
스프링 부트 템플릿엔진 기본 viewName 매핑
resources:templates/ +{ViewName}+ .html

** : spring-boot-devtools 라이브러리를 추가하면, html 파일을 컴파일만 해주면 서버 재시작 없이
View 파일 변경이 가능하다.

- MVC와 템플릿 엔진
MVC: Model, View, Controller


@RequestParam("name") String name - get url로 정보 넘겨서 받음

@ResponseBody 를 사용하면 뷰 리졸버( viewResolver )를 사용하지 않음
대신에 HTTP의 BODY에 문자 내용을 직접 반환(HTML BODY TAG를 말하는 것이 아님)

- 회원 관리 백엔드 개발

스프링 빈을 등록하는 2가지 방법
컴포넌트 스캔과 자동 의존관계 설정
@Controller @Service @Repository 설정

자바 코드로 직접 스프링 빈 등록하기
@Configuration @Bean으로 직접등록

참고: 스프링은 스프링 컨테이너에 스프링 빈을 등록할 때, 기본으로 싱글톤으로 등록한다(유일하게 하나만
등록해서 공유한다) 따라서 같은 스프링 빈이면 모두 같은 인스턴스다. 설정으로 싱글톤이 아니게 설정할 수
있지만, 특별한 경우를 제외하면 대부분 싱글톤을 사용한다

private final MemberService memberService; <- 하는 이유 생성자를 통한 최초 객체 할당만 하게끔

- DB 접근

-- member
drop table if exists member CASCADE;
create table member
(
 id bigint generated by default as identity,
 name varchar(255),
 primary key (id)
);

build.gradle 라이브러리 추가
implementation 'org.springframework.boot:spring-boot-starter-jdbc'
runtimeOnly 'com.h2database:h2'

스프링 부트 데이터베이스 연결 설정 추가
resources/application.properties

spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa

- AOP
AOP가 필요한 상황
모든 메소드의 호출 시간을 측정하고 싶다면?
공통 관심 사항(cross-cutting concern) vs 핵심 관심 사항(core concern)
회원 가입 시간, 회원 조회 시간을 측정하고 싶다면?

의존성 추가
implementation 'org.springframework.boot:spring-boot-starter-aop'

@Component
@Aspect
@Around("execution(* com.example.review..*(..))") // com.example.review 안에 적용